basePath: /
definitions:
  model.CreateDriverRequest:
    properties:
      latitude:
        maximum: 180
        minimum: -180
        type: number
      longtitude:
        maximum: 90
        minimum: -90
        type: number
    required:
    - latitude
    - longtitude
    type: object
  model.CreatePassengerRequest:
    properties:
      latitude:
        maximum: 180
        minimum: -180
        type: number
      longtitude:
        maximum: 90
        minimum: -90
        type: number
    required:
    - latitude
    - longtitude
    type: object
  model.FindDriverRequest:
    properties:
      latitude:
        maximum: 180
        minimum: -180
        type: number
      longtitude:
        maximum: 90
        minimum: -90
        type: number
    required:
    - latitude
    - longtitude
    type: object
  model.MatchRequest:
    properties:
      driverId:
        type: string
      passengerId:
        type: string
    type: object
  model.WebResponse:
    properties:
      code:
        type: integer
      data: {}
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: BiTaksi
  version: "2.0"
paths:
  /api/driver:
    post:
      consumes:
      - application/json
      description: Create a new driver
      parameters:
      - description: Add Driver
        in: body
        name: driver
        required: true
        schema:
          $ref: '#/definitions/model.CreateDriverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Create a driver
      tags:
      - Driver
    put:
      consumes:
      - application/json
      description: Insert from csv
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Insert from csv
      tags:
      - Driver
  /api/matcher:
    put:
      consumes:
      - application/json
      description: Matcher the passenger with the driver
      parameters:
      - description: PassengerId DriverId
        in: body
        name: passenger
        required: true
        schema:
          $ref: '#/definitions/model.MatchRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Match a passenger with a driver
      tags:
      - Matcher
  /api/matcher/findDriver:
    put:
      consumes:
      - application/json
      description: Find the nearest driver to passenger
      parameters:
      - description: PassengerId DriverId
        in: body
        name: passenger
        required: true
        schema:
          $ref: '#/definitions/model.FindDriverRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Find driver
      tags:
      - Matcher
  /api/passenger:
    post:
      consumes:
      - application/json
      description: Create a new passenger
      parameters:
      - description: Add Passenger
        in: body
        name: passenger
        required: true
        schema:
          $ref: '#/definitions/model.CreatePassengerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.WebResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.WebResponse'
      summary: Create a passenger
      tags:
      - Passenger
swagger: "2.0"
