// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/driver": {
            "put": {
                "description": "Insert from csv",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Insert from csv",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Driver"
                ],
                "summary": "Create a driver",
                "parameters": [
                    {
                        "description": "Add Driver",
                        "name": "driver",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    }
                }
            }
        },
        "/api/matcher": {
            "put": {
                "description": "Matcher the passenger with the driver",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matcher"
                ],
                "summary": "Match a passenger with a driver",
                "parameters": [
                    {
                        "description": "PassengerId DriverId",
                        "name": "passenger",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.MatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    }
                }
            }
        },
        "/api/matcher/findDriver": {
            "put": {
                "description": "Find the nearest driver to passenger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Matcher"
                ],
                "summary": "Find driver",
                "parameters": [
                    {
                        "description": "PassengerId DriverId",
                        "name": "passenger",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FindDriverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    }
                }
            }
        },
        "/api/passenger": {
            "post": {
                "description": "Create a new passenger",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Passenger"
                ],
                "summary": "Create a passenger",
                "parameters": [
                    {
                        "description": "Add Passenger",
                        "name": "passenger",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreatePassengerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.WebResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateDriverRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longtitude"
            ],
            "properties": {
                "latitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "longtitude": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                }
            }
        },
        "model.CreatePassengerRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longtitude"
            ],
            "properties": {
                "latitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "longtitude": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                }
            }
        },
        "model.FindDriverRequest": {
            "type": "object",
            "required": [
                "latitude",
                "longtitude"
            ],
            "properties": {
                "latitude": {
                    "type": "number",
                    "maximum": 180,
                    "minimum": -180
                },
                "longtitude": {
                    "type": "number",
                    "maximum": 90,
                    "minimum": -90
                }
            }
        },
        "model.MatchRequest": {
            "type": "object",
            "properties": {
                "driverId": {
                    "type": "string"
                },
                "passengerId": {
                    "type": "string"
                }
            }
        },
        "model.WebResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "BiTaksi",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
